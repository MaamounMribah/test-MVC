@model BeeProj.Models.B_DOCENTETE
@{
    ViewBag.Title = "facture";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Facture</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("index","Administration")">Administration </a>
            </li>
            <li>
                <a href="@Url.Action("facture","gestionfactures")">facture </a>
            </li>
            <li class="active">
                <strong> <a href="@Url.Action("facture","gestionfactures")">Facture</a></strong>
            </li>
        </ol>
    </div>

</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">

            @if (ViewBag.existepas != null)
            {
                <div class="alert alert-danger alert-dismissable">
                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                    Aucune facture existe avec les information saisies !
                </div>
            }

            @if (ViewBag.msg != null)
            {
                <div class="alert alert-success alert-dismissable">
                    <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                    @ViewBag.msg
                </div>

            }
            <div class="ibox float-e-margins">
                <div class="ibox-title" style="height:80px;">

                    @using (Html.BeginForm("Facture", "gestionfactures", FormMethod.Post))
                    {
                        <label class="control-label">Recherche par facture </label>


                        <div class="input-group m-b">
                            @if (Model != null)
                            {
                                <input type="text" class="form-control" id="facture" name="facture" value="@Model.DO_Piece" />

                            }
                            else
                            {
                                <input type="text" class="form-control" id="facture" name="facture" value="" />

                            }

                            <span class="input-group-btn">
                                <button type="submit" class="btn btn-purplebee ladda-button">Rechercher!
                       
                                   
</button>
                            </span>

                        </div>

                    }


                </div>
            </div>
        </div>
    </div>
  
</div>


<script src="~/js/jquery-3.1.1.min.js"></script>
<script src="~/js/plugins/metisMenu/jquery.metisMenu.js"></script>
<script src="~/js/plugins/pace/pace.min.js"></script>
<script src="~/js/plugins/slimscroll/jquery.slimscroll.min.js"></script>
<script src="~/js/plugins/chosen/chosen.jquery.js"></script>
<script src="~/js/plugins/dataTables/datatables.min.js"></script>
<!-- Sweet alert -->
<script src="~/js/plugins/sweetalert/sweetalert.min.js"></script>
<!-- Chosen -->
<script src="~/js/plugins/chosen/chosen.jquery.js"></script>
<link href="~/css/plugins/ladda/ladda-themeless.min.css" rel="stylesheet">
<!-- Ladda -->
<script src="~/js/plugins/ladda/spin.min.js"></script>
<script src="~/js/plugins/ladda/ladda.min.js"></script>
<script src="~/js/plugins/ladda/ladda.jquery.min.js"></script>
<script>

    $(document).ready(function () {

        // Bind normal buttons
        Ladda.bind('.ladda-button', { timeout: 2000 });

        // Bind progress buttons and simulate loading progress
        Ladda.bind('.progress-demo .ladda-button', {
            callback: function (instance) {
                var progress = 0;
                var interval = setInterval(function () {
                    progress = Math.min(progress + Math.random() * 0.1, 1);
                    instance.setProgress(progress);

                    if (progress === 1) {
                        instance.stop();
                        clearInterval(interval);
                    }
                }, 200);
            }
        });


        var l = Ladda.bind('.ladda-button-demo');

        l.click(function () {
            // Start loading
            l.ladda('start');

            // Timeout example
            // Do something in backend and then stop ladda
            setTimeout(function () {
                l.ladda('stop');
            }, 12000)


        });

    });


    $(document).ready(function () {
        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green'
        });
        $(".todo-list").sortable({
            placeholder: "sort-highlight",
            handle: ".handle",
            forcePlaceholderSize: true,
            zIndex: 999999
        }).disableSelection();

        $('.classDate').datepicker();

        $('.i-checks').iCheck({
            radioClass: 'iradio_square-green'
        });
        $('.chosen-select').chosen({ width: "100%" });


    });



    $("#facture").change(function () {

        if ($("#facture").val() == null) {
            $("#searchClient").prop('disabled', true);
        }
        else {
            $("#searchClient").prop('disabled', false);
        }
    });
    $("#searchClient").click(function () {

        $("#showClientInfos").removeClass("hidden");

    });





    function Decaler(button) {
        $("#Decaler").modal();
        var row = $(button).closest("tr");
        var piecereglement = $("td", row).eq(0).html();
        var AbonnementChoisi = $('select[name^="facture"]', row).val();
        $('#facture').change(function () {

            AbonnementChoisi = $('select#facture').find("option:selected").val();

        });
        $("#Decaler").click(function () {
            $.ajax({
                type: "get",
                url: '/Correction/Decaler',
                dataType: 'json',
                success: function (msg) {
                    if (msg.result == "Succes") {
                        toastr.success('Décalage ce fait avec succès ! ', 'Succes');
                        location.reload();
                    }

                }
            });
        });
    };



    function ChangerVisibiliteFacture(cbm) {
        swal({
            title: "Changer la visibilité de cete facture ?",
            text: " ",
            type: "warning",
            showCancelButton: true,
            cancelButtonText: 'Annuler',
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Oui.",
            closeOnConfirm: false
        }, function () {
            $.ajax({
                type: "get",
                url: '/GestionFactures/ChangerVisibiliteFacture?id=' + cbm, // we are calling json method
                dataType: 'json',
                success: function (result) {
                    swal("visibilité changée!", "visibilité de facture changée avec succès! ", "success");
                    window.location = "/GestionFactures/DetailsFacture/" + cbm;
                }
            });
        });


    }

</script>

